cmake_minimum_required(VERSION 3.13)
message(STATUS "'${CMAKE_BUILD_TYPE}'")
IF (CMAKE_BUILD_TYPE STREQUAL "DEBUG")
    MESSAGE(STATUS "DEBUG MODE")
    SET(CMAKE_BUILD_TYPE Debug)
    project(libarbys)
    add_compile_definitions(__DEBUG)

    add_executable(libarbys ./libarbys/tests/test.cpp)
ELSE()
    MESSAGE(STATUS "RELEASE MODE")
    SET(CMAKE_BUILD_TYPE Release)
    set(PICO_BOARD "pico_w")
    IF (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/pico-sdk)
        message(STATUS "Pico SDK found in the source directory")
        IF (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/pico-sdk/lib/cyw43-driver/cyw43.h)
            message(STATUS "Found the submodules in the pico-sdk directory")
        ELSE()
            message(STATUS "No submodules found in the pico-sdk directory, cloning from git")
            execute_process(COMMAND ${CMAKE_COMMAND} -E chdir ${CMAKE_CURRENT_SOURCE_DIR}/pico-sdk git submodule update --init)
        ENDIF()
        include(pico-sdk/pico_sdk_init.cmake)

    ELSE()
        message(STATUS "Pico SDK not found, cloning from git")
        set(PICO_SDK_FETCH_FROM_GIT on)
        include(pico_sdk_import.cmake)
    ENDIF()
    project(libarbys)
    pico_sdk_init()

    add_executable(libarbys ./libarbys/libarbys.hpp)

    target_link_libraries(libarbys pico_stdlib pico_stdlib pico_cyw43_arch_none)
    pico_enable_stdio_usb(libarbys 1)
    pico_enable_stdio_uart(libarbys 0)

    pico_add_extra_outputs(libarbys)

ENDIF()
